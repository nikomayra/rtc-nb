services:
  # api:
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile
  #   container_name: rtc_api
  #   environment:
  #     - POSTGRES_HOST=db
  #     - FILESTORE_PATH=${FILESTORE_PATH}
  #   volumes:
  #     - filestore:${FILESTORE_PATH}
  #   ports:
  #     - '8080:8080'
  #   depends_on:
  #     db:
  #       condition: service_healthy

  db:
    image: postgres:15
    container_name: rtc_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    container_name: rtc_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: your@email.com
      PGADMIN_DEFAULT_PASSWORD: yourpassword
    ports:
      - '5050:80'
    depends_on:
      - db

volumes:
  pgdata:
  filestore:
